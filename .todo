- when user changing route/page there should be sort of loader/spinner. Loading until the page is loaded. Also, check for animation when transporting between pages

- Translate server error messages.

- reduce bundle size by reusing one component instead of duplicate code.
Warning: bundle initial exceeded maximum budget. Budget 500.00 kB was not met by 5.19 MB with a total of 5.68 MB.

- fix each role privileges on add-edit-account tooltip or just make a dialog.

- create simple Notification box to store live notifications. And only for Admin allow sending live message to all users.

- check if a child can have duplicate activity for different goals/strengths. CHILD SHOULD NOT have duplicate activity.
- check host file domain name in PowerToys app, may enable you to run server on LAN.

- translate date filter dialog of ag-grid's table.

-try deleting PersonController so that when new child/account added, its person is embedded with the child/account object. Is TypeORM will handle it correctly?

- Add visitors of the site in the ~Dashboard? Is NestJs provide such thing?

- Add page that shows activities of a specific field. try reuse Program component.

- Look for how to make a web page as Android App, Check out Capacitor.

- When user navigate to other page, show opacity animation. Like in RxJs web page (hide then show the other page).

- Apache server...

- change title component to have path like instead of `title1 \n title2`. so it will be:
  `title1 > title2 > title3` each link is clickable.
  
- Default load Goals page with filter of this month AND state=continues.

- About us page and link in the footer.

- BehaviorSubject that emit Person[]. But it will start fetching if its initial value is undefined AND a subscriber subscribe. 
1 - It should not fetch multiple times for multiple subscribers.
2 - It initial value is `undefined` to know if it is loading or fetched with value of `[]`.
3 - There should be a way to access the value without dealing with subscription.
4 - Should be Subject so that new values will be emitted.
5 - add/edit/delete should call `fetchPersons()` and it checks for last existed value. Let's say that `Person[]` are belong to FK Admin-has-many-Person then `fetchPersons(admin.id);` `admin` is last fetched value and Person[] can be access as `admin.persons`. This is not the case but it is problem the solution should be able to solve.
6 - Client code should be either subscribe with next:(v:`Person[]`)=>... Or direct access with getPersons():`Person[]|undefined` for direct access.
//Propose solution:
public person$ = new Observable((subscriber)=>{
	if(this.person == undefined){
		subscriber.next(await fetchPersons());//fetchPerson will return Person[].
	}else subscriber.next(this.person);
}).pipe(shareReplay(1));
public person:undefined|Person[];
constructor(){
	this.person$.subscribe(v=>this.person = v);
}